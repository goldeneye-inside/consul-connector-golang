// Code generated by protoc-gen-go. DO NOT EDIT.
// source: connector.proto

package consul

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a0c0da548590a25, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type ReqRegisterService struct {
	ConsulToken          string   `protobuf:"bytes,1,opt,name=consul_token,json=consulToken,proto3" json:"consul_token,omitempty"`
	ServiceName          string   `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	ServiceId            string   `protobuf:"bytes,3,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	ServiceIp            string   `protobuf:"bytes,4,opt,name=service_ip,json=serviceIp,proto3" json:"service_ip,omitempty"`
	ServicePort          uint32   `protobuf:"varint,5,opt,name=service_port,json=servicePort,proto3" json:"service_port,omitempty"`
	HealthCheckUrl       string   `protobuf:"bytes,6,opt,name=health_check_url,json=healthCheckUrl,proto3" json:"health_check_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqRegisterService) Reset()         { *m = ReqRegisterService{} }
func (m *ReqRegisterService) String() string { return proto.CompactTextString(m) }
func (*ReqRegisterService) ProtoMessage()    {}
func (*ReqRegisterService) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a0c0da548590a25, []int{1}
}

func (m *ReqRegisterService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqRegisterService.Unmarshal(m, b)
}
func (m *ReqRegisterService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqRegisterService.Marshal(b, m, deterministic)
}
func (m *ReqRegisterService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqRegisterService.Merge(m, src)
}
func (m *ReqRegisterService) XXX_Size() int {
	return xxx_messageInfo_ReqRegisterService.Size(m)
}
func (m *ReqRegisterService) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqRegisterService.DiscardUnknown(m)
}

var xxx_messageInfo_ReqRegisterService proto.InternalMessageInfo

func (m *ReqRegisterService) GetConsulToken() string {
	if m != nil {
		return m.ConsulToken
	}
	return ""
}

func (m *ReqRegisterService) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *ReqRegisterService) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *ReqRegisterService) GetServiceIp() string {
	if m != nil {
		return m.ServiceIp
	}
	return ""
}

func (m *ReqRegisterService) GetServicePort() uint32 {
	if m != nil {
		return m.ServicePort
	}
	return 0
}

func (m *ReqRegisterService) GetHealthCheckUrl() string {
	if m != nil {
		return m.HealthCheckUrl
	}
	return ""
}

type ReqGetServiceAddress struct {
	ConsulToken          string   `protobuf:"bytes,1,opt,name=consul_token,json=consulToken,proto3" json:"consul_token,omitempty"`
	ServiceName          string   `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqGetServiceAddress) Reset()         { *m = ReqGetServiceAddress{} }
func (m *ReqGetServiceAddress) String() string { return proto.CompactTextString(m) }
func (*ReqGetServiceAddress) ProtoMessage()    {}
func (*ReqGetServiceAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a0c0da548590a25, []int{2}
}

func (m *ReqGetServiceAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqGetServiceAddress.Unmarshal(m, b)
}
func (m *ReqGetServiceAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqGetServiceAddress.Marshal(b, m, deterministic)
}
func (m *ReqGetServiceAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqGetServiceAddress.Merge(m, src)
}
func (m *ReqGetServiceAddress) XXX_Size() int {
	return xxx_messageInfo_ReqGetServiceAddress.Size(m)
}
func (m *ReqGetServiceAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqGetServiceAddress.DiscardUnknown(m)
}

var xxx_messageInfo_ReqGetServiceAddress proto.InternalMessageInfo

func (m *ReqGetServiceAddress) GetConsulToken() string {
	if m != nil {
		return m.ConsulToken
	}
	return ""
}

func (m *ReqGetServiceAddress) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

type RespGetServiceAddress struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespGetServiceAddress) Reset()         { *m = RespGetServiceAddress{} }
func (m *RespGetServiceAddress) String() string { return proto.CompactTextString(m) }
func (*RespGetServiceAddress) ProtoMessage()    {}
func (*RespGetServiceAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a0c0da548590a25, []int{3}
}

func (m *RespGetServiceAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespGetServiceAddress.Unmarshal(m, b)
}
func (m *RespGetServiceAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespGetServiceAddress.Marshal(b, m, deterministic)
}
func (m *RespGetServiceAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespGetServiceAddress.Merge(m, src)
}
func (m *RespGetServiceAddress) XXX_Size() int {
	return xxx_messageInfo_RespGetServiceAddress.Size(m)
}
func (m *RespGetServiceAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_RespGetServiceAddress.DiscardUnknown(m)
}

var xxx_messageInfo_RespGetServiceAddress proto.InternalMessageInfo

func (m *RespGetServiceAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "consul.Empty")
	proto.RegisterType((*ReqRegisterService)(nil), "consul.ReqRegisterService")
	proto.RegisterType((*ReqGetServiceAddress)(nil), "consul.ReqGetServiceAddress")
	proto.RegisterType((*RespGetServiceAddress)(nil), "consul.RespGetServiceAddress")
}

func init() { proto.RegisterFile("connector.proto", fileDescriptor_9a0c0da548590a25) }

var fileDescriptor_9a0c0da548590a25 = []byte{
	// 295 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xcf, 0x4a, 0xf4, 0x30,
	0x14, 0xc5, 0xe9, 0xf7, 0x39, 0x1d, 0xe6, 0xea, 0x58, 0x0d, 0x0a, 0xa1, 0x38, 0x30, 0x76, 0xd5,
	0x55, 0x41, 0xdd, 0xba, 0x91, 0x22, 0xe2, 0x46, 0x86, 0xaa, 0x3b, 0xa1, 0xd4, 0xf4, 0x62, 0xcb,
	0xb4, 0x4d, 0x26, 0xc9, 0x08, 0x3e, 0x8e, 0x0f, 0xe7, 0x7b, 0x48, 0x93, 0x56, 0x67, 0xac, 0x4b,
	0x77, 0xc9, 0x39, 0xbf, 0xdc, 0x3f, 0x9c, 0x80, 0xc7, 0x78, 0xd3, 0x20, 0xd3, 0x5c, 0x46, 0x42,
	0x72, 0xcd, 0x89, 0xcb, 0x78, 0xa3, 0xd6, 0x55, 0x30, 0x86, 0xd1, 0x75, 0x2d, 0xf4, 0x5b, 0xf0,
	0xe1, 0x00, 0x49, 0x70, 0x95, 0xe0, 0x4b, 0xa9, 0x34, 0xca, 0x7b, 0x94, 0xaf, 0x25, 0x43, 0x72,
	0x0a, 0x7b, 0x96, 0x4c, 0x35, 0x5f, 0x62, 0x43, 0x9d, 0xb9, 0x13, 0x4e, 0x92, 0x5d, 0xab, 0x3d,
	0xb4, 0x52, 0x8b, 0x28, 0x4b, 0xa7, 0x4d, 0x56, 0x23, 0xfd, 0x67, 0x91, 0x4e, 0xbb, 0xcb, 0x6a,
	0x24, 0x33, 0x80, 0x1e, 0x29, 0x73, 0xfa, 0xdf, 0x00, 0x93, 0x4e, 0xb9, 0xcd, 0xb7, 0x6c, 0x41,
	0x77, 0xb6, 0x6d, 0xb1, 0xd9, 0x40, 0x70, 0xa9, 0xe9, 0x68, 0xee, 0x84, 0xd3, 0xaf, 0x06, 0x0b,
	0x2e, 0x35, 0x09, 0xe1, 0xa0, 0xc0, 0xac, 0xd2, 0x45, 0xca, 0x0a, 0x64, 0xcb, 0x74, 0x2d, 0x2b,
	0xea, 0x9a, 0x3a, 0xfb, 0x56, 0x8f, 0x5b, 0xf9, 0x51, 0x56, 0xc1, 0x13, 0x1c, 0x25, 0xb8, 0xba,
	0x41, 0xdd, 0x6d, 0x78, 0x95, 0xe7, 0x12, 0x95, 0xfa, 0x9b, 0x45, 0x83, 0x33, 0x38, 0x4e, 0x50,
	0x89, 0x61, 0x79, 0x0a, 0xe3, 0xcc, 0x1e, 0xbb, 0xca, 0xfd, 0xf5, 0xfc, 0xdd, 0x01, 0x2f, 0x36,
	0x5d, 0xe2, 0x3e, 0x23, 0x72, 0x09, 0xde, 0xcf, 0x20, 0xfc, 0xc8, 0x8e, 0x12, 0x0d, 0x43, 0xf2,
	0xa7, 0xbd, 0x67, 0xa2, 0x24, 0x0b, 0x38, 0x1c, 0x0e, 0x70, 0xb2, 0xf1, 0x7e, 0xe0, 0xfa, 0xb3,
	0x6f, 0xf7, 0x97, 0xe9, 0x9f, 0x5d, 0xf3, 0x69, 0x2e, 0x3e, 0x03, 0x00, 0x00, 0xff, 0xff, 0x92,
	0xba, 0x1f, 0xd3, 0x47, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConsulConnectorClient is the client API for ConsulConnector service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConsulConnectorClient interface {
	RegisterService(ctx context.Context, in *ReqRegisterService, opts ...grpc.CallOption) (*Empty, error)
	GetServiceAddress(ctx context.Context, in *ReqGetServiceAddress, opts ...grpc.CallOption) (*RespGetServiceAddress, error)
}

type consulConnectorClient struct {
	cc *grpc.ClientConn
}

func NewConsulConnectorClient(cc *grpc.ClientConn) ConsulConnectorClient {
	return &consulConnectorClient{cc}
}

func (c *consulConnectorClient) RegisterService(ctx context.Context, in *ReqRegisterService, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/consul.ConsulConnector/RegisterService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consulConnectorClient) GetServiceAddress(ctx context.Context, in *ReqGetServiceAddress, opts ...grpc.CallOption) (*RespGetServiceAddress, error) {
	out := new(RespGetServiceAddress)
	err := c.cc.Invoke(ctx, "/consul.ConsulConnector/GetServiceAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConsulConnectorServer is the server API for ConsulConnector service.
type ConsulConnectorServer interface {
	RegisterService(context.Context, *ReqRegisterService) (*Empty, error)
	GetServiceAddress(context.Context, *ReqGetServiceAddress) (*RespGetServiceAddress, error)
}

// UnimplementedConsulConnectorServer can be embedded to have forward compatible implementations.
type UnimplementedConsulConnectorServer struct {
}

func (*UnimplementedConsulConnectorServer) RegisterService(ctx context.Context, req *ReqRegisterService) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterService not implemented")
}
func (*UnimplementedConsulConnectorServer) GetServiceAddress(ctx context.Context, req *ReqGetServiceAddress) (*RespGetServiceAddress, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceAddress not implemented")
}

func RegisterConsulConnectorServer(s *grpc.Server, srv ConsulConnectorServer) {
	s.RegisterService(&_ConsulConnector_serviceDesc, srv)
}

func _ConsulConnector_RegisterService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqRegisterService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsulConnectorServer).RegisterService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consul.ConsulConnector/RegisterService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsulConnectorServer).RegisterService(ctx, req.(*ReqRegisterService))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsulConnector_GetServiceAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGetServiceAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsulConnectorServer).GetServiceAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consul.ConsulConnector/GetServiceAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsulConnectorServer).GetServiceAddress(ctx, req.(*ReqGetServiceAddress))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConsulConnector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "consul.ConsulConnector",
	HandlerType: (*ConsulConnectorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterService",
			Handler:    _ConsulConnector_RegisterService_Handler,
		},
		{
			MethodName: "GetServiceAddress",
			Handler:    _ConsulConnector_GetServiceAddress_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "connector.proto",
}
